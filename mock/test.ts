import { MockMethod } from 'vite-plugin-mock';

export default [
    {
        url: '/apiMock/get',
        method: 'get',
        response: ({ query }) => {
            return {
                code: 200,
                data: {
                    rows: [{
                        name: 'vben',
                        title: '标题',
                        body: '内容',
                    }]
                },
            };
        },
    },
    {
        url: '/apiMock/captcha',
        method: 'get',
        response: ({ query }) => {
            return {
                code: 200,
                data: {
                    uuid: '',
                    captcha: `iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoCAYAAABpYH0BAAAAAXNSR0IArs4c6QAAEIBJREFUaEPtmnm0XFWVxn/nTnVrePXGvCRkwnQQZeEABlsDHYfQShwYJKGlbUVtB2hFgaCtPdARu5sGtZc0tiKtIEKWOGAUQ5QAxqWBDgEEYhAkEMyLSV5I3lCvpjufXvvcqgRdy+4/WKvrn9Rbteqtqtq3zv3Ot/f+9t5HNTKtLcDR4GQxSsegM8xDWWjlkiiHVCkyBTr/BAVYGtwMbJ1CJnYJkHbslbHHcsCySSxFKvZKo+U7ZFgo3LSAJRfugb2nU+xIy1LyO1J2vmbk1ZY77Dzlc7nzztOAkP+vjgCocbIEZUDoAIiFtpwcQBT6DwBUOgfSNuALcAJMAlouLgvKF5VZ1uENQMm15XtyRRuyApZWPbF3tMZOZPMEqM6GC2hCHLl3ubnOPeYQZ517k3voANjKtJACWy5GgmVAOMKzTNmkAkLngvJdechPCqPCDqiyX8JiO8s/636vy1qzGLMIjZLfISVVDoFyzHb1wl5WmuIdvtvDHOuutQOeeJrhos46+MiKcxBVkGpzbxYZSr5gXnOUMiW3a3Ve86uad7SAoEmUTcuyhHMGgMOklx9+3s4Zwy5bzULkqgmxZdPsob0QIzTekW9ulzadKHU4TBmnFhDF5Q0+eQgyAMZp0rHLX7rM6TImd9L88kJh2YUulcU1A8s1fFKdv258NAB2riyvR3Yx301x88zSBI5x+p7Ya0sRWpCaBf1fIGoDnCGYYGFwAJUmQc4nw7aci4bKEhIMa3LgjoAnse4IMpmVdRhqI0FAaweNYy5goO+AZ0DsbFB3S1Apmd0ms9Lc9v/dXpNaiUlsXYp0ccix6NIh97gjIUh36CpAJk0DoMS6jDze/X6mFdqmhr7qcIbt7pckjFZOZ+UAHqgCGteAYSATIA2Yz8tAh30kAqaAsEf24ooNIO7qik4WzhOJ4KE7CcXwzmDaJVr+v9LxjJYvp8olReSKxLwjMsXWSQdAAaubnTsZSzJ21s7fVy4oAdAjU8LC3C+My3cZm7+TR1ylsIxkqoG89sDeeJYhQB5EOj7SAVEAE2/sJtAcuK53dmOm0vG05E4y5ZGI5rNMhDssT6w0FFiJwxae56HcgkkXUarQqabgOCRBhFMUe5hqQLEMjoKgnVFyxKHFvknBc0HslUUs2Ge9tU+0wnUtggB8P3eLej2mXHKxbWi1UgoF8aQ//vgDAHMQhIES9MWZC6LbsghE5zkuhybrVIdGeG4mpr/qdnIRTLfBKYBtQZRB2IQ5fSDrsnWGnQVgK6YmphkYHuW5WpNqf9XsvThSL+zL/VWEf/L7rRB8F3wLs7lBA2YN5M5lMnCncDCJo/M0TqyjmjZit8vA39N1GXYaooROcQxeiYP1CL+vSADmeSiBRx6Hn9zzS3Y+sxNLpRTsmGWvPI4LVi1jXhUq8kNJG9exmao3KPcNIdFPFj+ewEM9spfot1vDQ7+Gn256kN/u/DUeMb6V8JpXnsBfrVrO7AHwMnClWDB6OSfXYRmjo5ncha2C0XWyG/LIhW1K0pzGq5SIGm286hDNTtgX5tzzSMZN376b3fumcX2fYqnAwQO/w4przKsqytk037r+Smb5wsg6lXKFCEVDqicFmx6e5obv3Meu/Y2e2P/kkRpf+u5Wdo3XKXkWVd9iav9u7LjO3H6fQtbiezdfgad/H0SRMAZAE9/DxvMYeCSB5OVZDFkIjk0SJKhyHzPibsCd2wLW3f5jxnaPM3vOfJa/4fUsX97HokGTi/nlQ9N866tf4LYbPktZKpYgxPMLtDt578dbJ7j19rvYNTbJyNxFPbH/5vc38cTeGrPmLmDF605lxWkD/MkgSJTftm2KW264jnVfywEUBuZ1v6SSbr0vMiZsHQZQFHk3gbjyRR2JUoQwgmKVyLIYa0O7CO//2x+y69ndHFt1WHPxh1n6Ctu4dBRBQUEZGHGhJDEmjHALnogV9rYhKsIHPrGeXc+OMX/A4bKLL+yJ/c7f7mH2kM9lF3+IZSd2KvQwB9BXMODl7tp1XckJhwuJbi2sw8CEyMwSGZML6NxIKNoBsB1AeZimgn0pfHvzBF9cdyfDJcVVFyzn9KWLTNOllUDByd3fRRaSJ6C0FWCXB6hr2JfAdza3+eKtGxkpaa5632s4fen8ntgPlRWfef9p/PnSUZM8ohjKblfwa6MksjQ5LKK7YttoQWmUmCQShBqpRy3HxKVukDRNE9FvyRQUxSld9tQ8skHFslU3oIZnsaAas+mq83BqB3GHh0Ru0w5n8G0b33EJazMUXBv8KrF2GBP/H4TTVt2EPTSHhX0Rm/7tLOyZ3tjPr8ZsuOZMvJkJqv39Jr3W20081zHyzKzfFx8SVgnJLGIr79LYWV6rKB1GRvMGoj9Ugp8GkPnotGBqxMxu4toRQRoR27P51ma47tb7advjvPuMV7L27YuNkG+VoE6ACJOwPcNAcRZxlOF4Hu1M0Ugg8eDrG+E7GzaRJuO8501L+dRZJ/TM/l1nnMwn33EiroQoz6WZJmSOSz0IGPV9nJZUKA5GKPYVaUZtKBdpRQ2GXdsUvUqHsemoth3BOaKYNSApk2VlYgsSt42jmqZdMJENc/XXQ9Zt2Eqhfz83f/GdHJ9CfwWminlyGcl/krQNA8VcRwVhSqFomwS09qsN7rh3MxX/d/zX1RfxYgf6emT/lc9fxIIiDJVMz5fpGCw3zwNOCPMlBtaBZgOGK4RkRJ5FqEOGpJIKQwEw1ZkNbVuIGFFMG5CW0B0AU7dNpCcoWmUOZYN89Mpn2bLjAOXhCb771bdiRfC99Qe49/FneXD7YyyZU2H1yjfypmVzWTIMs4TnM3W8Yh9TAXzk8/v4+ZPPUBk6xG3Xn2PC7Hd7ZP+N688xm377hjG2P3CQxx7eyewFI7zjbct422klXjoIx4hem2kbBqZWRtsWlFKq2MQtkTGR1om0lWyp+roAFqEDoPIi6vEBXLdEm2FWXfooYw0fVTrAJRe/jmv+4Utk2mZalxmecwyjgz47Hn6QeUOjrL34Xaw+BYqpSPuE6cxn9RU7eLJu4w5M87GPvJbPffo/ERfohf1FH38ta9dehZ3a0Bhl9shLKA/P4bFH72PBaMSVH1vNOSdVqEq2SDIknbSUMo32ioS3MEZlBkCJgTmApaQJaQF0GXlfeQERDVpxRuKO8vr33sOkmo1dqTFvVsIbTxjh3LeeSLUI+wK4ad1dbPnvJ1HuS1Azk3z76vN5xXzRgWM0/IX86YUb2KuOxe1TvGg444zjPN658vie2C8ZbnPmkpD3vPnVzKq4jE3Btbf+lnu37cQu+6TtXdx49V9y8hzXSBs7hjQFzwLXbUA8gUrjHEBpLOYAtiB1DYCyMZFVM4V1I9VE9gCnvmcjB5IhBucVWDjc4trLTmWRB1P1mP4+l0ng2lse5MYf7OaYoVHOe00fn/7rk4jTfcT2Mbz8wh8wybFUBl2WDLa5/tKlLHZ7Y39Cf5ObL341x5dhcmI3xeFFjCXwhW9OcsuPtjB7doHVKwb56OpXMySyLOlUaCb91iA5iIpjrSXbCoAOMaWkDamkgZKZtTSzCQoFlzY2Ncqsuvx+Hh/PGJhT5vIPn8S5x0ElaTBkVUz0nQB+9jR84ss7qLViFrnP8P2vrDKJRXLa6Zdu5bmWz5Czn3/86Ere+lJZWG/sr7hoJW8/EQot6C+1iVHsw2fL03DldT+j1WyxpL/GNz53PqPijYHG8ZQZ3IVxC9dN/xDAlFIsMkZ6D0UkueC0SMlo47A/8Flz7XY2bx8ndTJ+evMZLADKzb0MOfNExxD0wVMRnHbhfVjlQQbDHdx983nGBaRSOe/vtrPnQAtrchsPrP8YfaLum/t6Zl+SeqEGcwYDatEkDe8Yw8Iz37eOUmGQ/nAvd9/yQQakypoJcIu+6R234whf2nvJ81xY5mOlWFpXQtECma2J1Qy25RBol7YqsOb6J9i49RmG587hM2uWsnwEKuEBqnq2oVhShIcm4My/30ZoFZgVP8Wmm1bTmoFKFa68rcXGu+/Hq+1g/U2XsLgP7F7Zf+0SjpWWVR1G+toEtKgxzI4ZeO+a21HaZzDaxw+/9kHmenkMlFadSJ1YZ2iV5jFQauDAzvt/JdPplOrOJrEzLCuiGbfx3WEOpopNT8Kaz36dYmWIyz58DqtOAWlOVTKP+jQEZdi8Ey798n1MTM9w9kkjfO4Tp5hMdiiFDU/B2mtuYyBr8MkPnc1Zp45Q7ZH9pz7wLs5eVqSqoegETLRmqJdG+flv4J+u/QnTk1OsXDrKNZevYFicUQiSgSMjHyshy9oiYxKdWsroG3HckkAsEzMbUjsx/b0wjfDtKs8FFjUfLvzHO3ji12Oc8rLFXLf2LcRhxlDBMp2WyQz+/cZtrP/F08wdGOCK85ez8lUVBtwm41nKb6wqf/Mvd3JwT8jioSLr/nUlukf2x/cXWX/1Stxak4F+i5msyJ4Yrr5xLz/asp1ZIw6XXPAyzj55Dn6WUNGO6ThIc8HymhAdFCEdaG1ZtJ18CFSSTqfMfJ3UTKwyHeIpj7idkhUrHATufqjGLTet55mnd3L66a/inHPfzosXu/xqL2z+xW+44657sYtFTl48l/+46AwWFkXNj5P1DfIUBb75wHNs/NEOnnj4Ec5dcTx/8Y4398T+qYe3cf4bF/Lus97Ay188l0efhh/eN8H3Nm3FKrm87Pg+/vnjr+VYV2MlbfqckpEx0uHz/RDiKWkmNLX04dtOPknLAYTIlZMDMVpH+MolbkS4lX52tcEuwsY7nuLOu7aw69AUcWmEQ3GZuQtfSv3QFK3abla8bg6XX7CCpTIfkYbPoTYMl5gswrMh3Hv3Hu66537GxveTFQd7Yr9h8xaenBzD8gdJpgdZOP9ExqdnqNd/x+l/tpA1F5zCyytQlqFXkmK5vkmErSBvddmp6cbMaIl3geuZma4vAzLJmF4qoyAzoAxbDfp86VY4HEgTLMdD1M5jv2qz6f5fMh4XuPfxPRT6ZnHC/EWcu3IBJ50AL3I0w5JZZkS2O0gfvz2aDxLDAB55tMFPtz7GgR7Zb93RYP2jj3AoLLL9gXH6SiMsXDKbs97yIk45Dpa4MCIJNWyD55HojMBxacYpA5ZtGq1KB1NamnGhWyDTrgFQHoGXkRIhA8o0aFF2KyY2Bo5DM7OoKAs3gaiJaRLUJJsZ9ZgftFL6WWZ7Hp4eIJou4hUsqeYIq7HJdgP0Y4vkDKHWI3sdSoEAgcQ1CTPSeAHaGgpBwrFFB6vWyMecRZ+ZoI3qKxNmGdVU4Zm5cJgPlSJHGOjidoYikSMnDmKyNKJsF+QMCGkUoctFMhm9tMCXFrdkpFjT7FPsb7SYWynhI8P4fZ0NmEd92qXo22gP6lYNTUApGKIoFY/M3pMe2WeuAU2SmCpbjNdm8AerJpkW5XiAuEkjyOe0rstz05NUZg0bonhRaNr8Ssf50Y7UkjuxUOa0oGjp7iktaWN3J1H5ORLp2yhtY4kmklMOShM5+Tw5HwEmKCU5WS4kdbVn6GmOAToSZDOc1MPK5Do9tjcpU5smqdxb2jnmIbMPR5qmIulM69lC1Er3IJJ8bg5ZJUn3cNH/Oj8++uEfQeAogC+QGkcBPArgC0TgBZofZeBRAF8gAi/Q/CgDXyCA/wOHNREDvpTZ3gAAAABJRU5ErkJggg==`
                },
            };
        },
    },
] as MockMethod[];
// as 是 Typescript运算符。
// A as B 断言：断定 A 会是一个 B类型.
